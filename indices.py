# -*- coding: utf-8 -*-
"""INDICES.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_3hDjuTOP4KdTh7uV6xqfUMFEJ5uiC4Z
"""

import pandas as pd
from sqlalchemy import create_engine
import psycopg2
import matplotlib.pyplot as plt

db_string = "postgresql://postgres:lorussoasoc@proyecto-final-henry.ctv6lgil6x7r.us-east-1.rds.amazonaws.com:5432/lorussoasoc"
db = create_engine(db_string)

query = """
SELECT a.id_pais "PAIS", paises.pais "NOMBRE PAIS", a.year "ANIO", paises.longitude "LONG", paises.latitude "LAT", paises.incomelevel "NIVEL INGRESOS", esperanza.edvan "ESPERANZA",
	a.agua "ACCESO AGUA", 
	b.acceso_electricidad "ACCESO ELECTRICIDAD", 
	c.agotamiento_recursos "AGOTAMIENTO RECURSOS",
	d.alfabetizacion "ALFABETIZACION",
	e.anios_escolares "ANIOS ESCOLARIDAD",
	f.camas_hospitales "CAMAS HOSPITALES",
	g.alcohol "CONSUMO ALCOHOL",
	h.densidad_poblacion "DENSIDAD POBLACION",
	i.desempleo "DESEMPLEO",
	j.emisiones_co2 "EMISIONES CO2",
	k.fuerza_laboral "FUERZA LABORAL",
	l.gini "GINI",
	m.ingreso_medio_pc "INGRESO MEDIO PC",
	n.desarrollo "INVERSION DESARROLLO",
	o.inversion_educacion "INVERSION EDUCACION",
	p.salud "INVERSION SALUD",
	q.obesidad "OBESIDAD",
	r.pib "PIB",
	s.poblacion "POBLACION",
	t.produccion_alimentos "PRODUCCION ALIMENTOS",
	u.renta_recursos "RENTA RECURSOS",
	v.srv_sanit_bas "SERV SANITARIOS",
	w.industria "INDUSTRIA",
	x.tabaco "CONSUMO TABACO",
	y.contaminacion_aire "CONTAMINACION AIRE"
FROM tbl_acceso_agua_potable a

LEFT JOIN tbl_esperanza_vida esperanza
ON a.id_pais = esperanza.id_pais AND a.year = esperanza.year

LEFT JOIN tbl_paises paises
ON a.id_pais = paises.id_pais

LEFT JOIN tbl_acceso_electricidad b
ON a.id_pais = b.id_pais AND a.year = b.year

LEFT JOIN tbl_agotamiento_recursos_naturales c
ON a.id_pais = c.id_pais AND a.year = c.year

LEFT JOIN tbl_alfabetizacion_porc d
ON a.id_pais = d.id_pais AND a.year = d.year

LEFT JOIN tbl_anios_medios_escolaridad e
ON a.id_pais = e.id_pais AND a.year = e.year

LEFT JOIN tbl_camas_hospitales f
ON a.id_pais = f.id_pais AND a.year = f.year

LEFT JOIN tbl_consumo_alcohol g
ON a.id_pais = g.id_pais AND a.year = g.year

LEFT JOIN tbl_densidad_poblacion h
ON a.id_pais = h.id_pais AND a.year = h.year

LEFT JOIN tbl_desempleo_fl i
ON a.id_pais = i.id_pais AND a.year = i.year

LEFT JOIN tbl_emisiones_co2 j
ON a.id_pais = j.id_pais AND a.year = j.year

LEFT JOIN tbl_fuerza_laboral k
ON a.id_pais = k.id_pais AND a.year = k.year

LEFT JOIN tbl_gini l
ON a.id_pais = l.id_pais AND a.year = l.year

LEFT JOIN tbl_ingreso_medio_pc m
ON a.id_pais = m.id_pais AND a.year = m.year

LEFT JOIN tbl_inversion_desarrollo n
ON a.id_pais = n.id_pais AND a.year = n.year

LEFT JOIN tbl_inversion_educacion o
ON a.id_pais = o.id_pais AND a.year = o.year

LEFT JOIN tbl_inversion_salud p
ON a.id_pais = p.id_pais AND a.year = p.year

LEFT JOIN tbl_obesidad q
ON a.id_pais = q.id_pais AND a.year = q.year

LEFT JOIN tbl_pib r
ON a.id_pais = r.id_pais AND a.year = r.year

LEFT JOIN tbl_poblacion s
ON a.id_pais = s.id_pais AND a.year = s.year

LEFT JOIN tbl_produccion_alimentos t
ON a.id_pais = t.id_pais AND a.year = t.year

LEFT JOIN tbl_renta_recursos_naturales u
ON a.id_pais = u.id_pais AND a.year = u.year

LEFT JOIN tbl_srv_sanit_bas v
ON a.id_pais = v.id_pais AND a.year = v.year

LEFT JOIN tbl_valor_industria w
ON a.id_pais = w.id_pais AND a.year = w.year

LEFT JOIN tbl_consumo_tabaco x
ON a.id_pais = x.id_pais AND a.year = x.year

LEFT JOIN tbl_contaminacion_aire y
ON a.id_pais = y.id_pais AND a.year = y.year

"""

df = pd.read_sql_query(query, con = db)
paises = ['ATG','ARG','BRB','BLZ','BOL','BRA','CAN','CHL','COL','CRI','CUB','DMA','DOM','ECU','SLV','GRD','GTM','GUY','HTI','HND','JAM','MEX','NIC','PAN','PRY','PER','KNA','LCA','VCT','SUR','BHS','TTO','USA','URY','VEN']
df[["NOMBRE PAIS"]]=df[["NOMBRE PAIS"]].replace({'United States':'United States of America',
                                                'Venezuela, RB':'Venezuela',
                                                'Antigua and Barbuda':'Antigua & Barbuda',
                                                'Bahamas, The':'Bahamas',})


#nivel_ingresos=df[["PAIS","NOMBRE PAIS","NIVEL INGRESOS"]].drop_duplicates().reset_index()
#nivel_ingresos.drop(["index"], axis=1, inplace=True)

#
#
#TABLA ESPERANZA DE VIDA

tbl_esperanza_vida_paises=df[['ANIO',"PAIS","NOMBRE PAIS",'ESPERANZA']].drop_duplicates().reset_index(drop=True)

#
#
#NIVEL DE INGRESOS
tbl_esperanza_vida_paises=df[['ANIO',"PAIS","NOMBRE PAIS",'ESPERANZA']].drop_duplicates().reset_index(drop=True)
tbl_esperanza_vida_paises=tbl_esperanza_vida_paises[tbl_esperanza_vida_paises['ANIO']==2020]
Nivel_Ingresos=df[["PAIS","NIVEL INGRESOS"]].drop_duplicates().reset_index(drop=True)
Nivel_Ingresos=Nivel_Ingresos.merge(tbl_esperanza_vida_paises ,left_on='PAIS', right_on='PAIS')#.drop(['NOMBRE PAIS'],axis=1)

#
#
#EDUCACION
educacion = df[['PAIS',"NOMBRE PAIS",'ANIO','ALFABETIZACION','ANIOS ESCOLARIDAD','ESPERANZA']]
educacion.insert(5, "ED.INDEX", ((educacion["ALFABETIZACION"]/100)*educacion["ANIOS ESCOLARIDAD"]))
# salida_educacion = educacion[['PAIS','NOMBRE PAIS','ANIO','ED.INDEX','ESPERANZA']]
# salida_educacion.to_csv('educacion.csv', index=False)

#
#
#MEDIO AMBIENTE
medio_ambiente = df[['PAIS','NOMBRE PAIS','ANIO','EMISIONES CO2','CONTAMINACION AIRE','ACCESO AGUA','PRODUCCION ALIMENTOS','AGOTAMIENTO RECURSOS','ESPERANZA']]
medio_ambiente.insert(8, "IND.AGUA", (medio_ambiente["ACCESO AGUA"]*df['POBLACION']/1000000000))

for pais in paises:
  medio_ambiente2 = medio_ambiente[medio_ambiente['PAIS']==pais]
  med1 = medio_ambiente2['IND.AGUA'].mean()
  std1 = medio_ambiente2['IND.AGUA'].std()
  med2 = medio_ambiente2['PRODUCCION ALIMENTOS'].mean()
  std2 = medio_ambiente2['PRODUCCION ALIMENTOS'].std()
  med2_deseada = std2 * med1 / std1
  if med2 < med2_deseada:
    delta = med2_deseada - med2
  else:
    delta = med2 - med2_deseada
  medio_ambiente2['PRODUCCION ALIMENTOS'] = medio_ambiente2['PRODUCCION ALIMENTOS'] + delta
  medio_ambiente.loc[medio_ambiente['PAIS']==pais, 'PRODUCCION ALIMENTOS'] = medio_ambiente2.loc[medio_ambiente2['PAIS']==pais,'PRODUCCION ALIMENTOS'].values

medio_ambiente.insert(9,'Agua.Alim', medio_ambiente['IND.AGUA']*medio_ambiente['PRODUCCION ALIMENTOS'])

for pais in paises:
  medio_ambiente2 = medio_ambiente[medio_ambiente['PAIS']==pais]
  med1 = medio_ambiente2['Agua.Alim'].mean()
  std1 = medio_ambiente2['Agua.Alim'].std()
  med2 = medio_ambiente2['CONTAMINACION AIRE'].mean()
  std2 = medio_ambiente2['CONTAMINACION AIRE'].std()
  med2_deseada = std2 * med1 / std1
  if med2 < med2_deseada:
    delta = med2_deseada - med2
  else:
    delta = med2 - med2_deseada
  medio_ambiente2['CONTAMINACION AIRE'] = medio_ambiente2['CONTAMINACION AIRE'] + delta
  medio_ambiente.loc[medio_ambiente['PAIS']==pais, 'CONTAMINACION AIRE'] = medio_ambiente2.loc[medio_ambiente2['PAIS']==pais,'CONTAMINACION AIRE'].values

medio_ambiente.insert(10,'AMB.INDEX', medio_ambiente['Agua.Alim']/medio_ambiente['CONTAMINACION AIRE'])
salida_medio_ambiente = medio_ambiente[['PAIS','NOMBRE PAIS','ANIO','AMB.INDEX','ESPERANZA']]
# salida_medio_ambiente.to_csv('medio_ambiente.csv', index=False)


#
#
#NIVEL DE VIDA
nivel_vida = df[['PAIS','NOMBRE PAIS','ANIO','CONSUMO ALCOHOL','CONSUMO TABACO','SERV SANITARIOS','ACCESO ELECTRICIDAD','ESPERANZA']]

nivel_vida.insert(5, "HAB.MEAN", ((nivel_vida["CONSUMO ALCOHOL"]+nivel_vida["CONSUMO TABACO"])/200))
nivel_vida.insert(8, "ACC.AE", (nivel_vida["SERV SANITARIOS"]/100)*(nivel_vida["ACCESO ELECTRICIDAD"]/100))
nivel_vida.insert(9, "IND.N.VIDA", (nivel_vida["ACC.AE"]/nivel_vida["HAB.MEAN"]))

ind_nivel_vida = nivel_vida[['PAIS','NOMBRE PAIS','ANIO','IND.N.VIDA','ESPERANZA']]
# ind_nivel_vida.to_csv('nivel_vida.csv', index=False)

#
#
#RECURSOS Y ESTADO
ind_estado=df[["PAIS","NOMBRE PAIS","ANIO","INVERSION SALUD","INVERSION DESARROLLO","INVERSION EDUCACION","PIB","GINI","ESPERANZA"]]
ind_estado.insert(6, "INVERS.", (ind_estado["INVERSION SALUD"]/100+ind_estado["INVERSION DESARROLLO"]/100+ind_estado["INVERSION EDUCACION"]/100))
ind_estado.insert(8, "PIB.INV", (ind_estado["PIB"]*ind_estado["INVERS."]))
ind_estado.insert(9, "DELTA","")
for i in paises:
    std1=ind_estado[ind_estado["PAIS"]==i]["PIB.INV"].std()
    std2=ind_estado[ind_estado["PAIS"]==i]["GINI"].std()
    mean1=ind_estado[ind_estado["PAIS"]==i]["PIB.INV"].mean()
    mean2=ind_estado[ind_estado["PAIS"]==i]["GINI"].mean()
    n_mean=std1*mean2/std2
    delta=n_mean-mean1
    ind_estado.loc[ind_estado["PAIS"] == i, "DELTA"] = delta
ind_estado= ind_estado.astype({"DELTA":"float64"})
ind_estado.insert(11, "ESTADO.INDEX", (ind_estado["PIB.INV"]+ind_estado["DELTA"])/(ind_estado["GINI"]*100000000))
# ind_estado = ind_estado[['PAIS','NOMBRE PAIS','ANIO','ESTADO.INDEX','ESPERANZA']]
# ind_estado.to_csv('recursos_y_estado.csv', index=False)

#
#
#Trabajo
trabajo = df[['PAIS','NOMBRE PAIS','ANIO','FUERZA LABORAL','DESEMPLEO','INGRESO MEDIO PC','POBLACION','ESPERANZA']]
trabajo.insert(5, "EMPLEADOS", round(trabajo["FUERZA LABORAL"]*(1-(trabajo["DESEMPLEO"]/100)),0))
trabajo.insert(7, "TRAB.INDEX", (trabajo["EMPLEADOS"]*trabajo["INGRESO MEDIO PC"])/trabajo["POBLACION"])

# salida_trabajo = trabajo[['PAIS','NOMBRE PAIS','ANIO','TRAB.INDEX','ESPERANZA']]
# salida_trabajo.to_csv('trabajo.csv', index=False)
# dfIngreso = df["NOMBRE PAIS", "NIVEL INGRESOS", "ESPERANZA DE VIDA" , "ANIO"]